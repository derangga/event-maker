// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        BigInt @id @default(autoincrement())
  name      String
  email     String @unique
  password  String?
  role      Role
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime?
  
  sessions     Session[]
  socialMedia  SocialMedia[]
  events       Event[]
  participants Participant[]
  blacklist    UserBlacklist?
  @@index([email])
}

enum Role {
  USER
  ADMIN
}

model Session {
  id        BigInt @id @default(autoincrement())
  session   String @default(cuid())
  user      User   @relation(fields: [userId], references: [id])
  userId    BigInt
  createdAt DateTime @default(now())
  expiresAt DateTime
  deletedAt DateTime?
  @@index([userId])
}

model SocialMedia {
  id          BigInt @id @default(autoincrement())
  name        String
  isConnected Boolean @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  user        User   @relation(fields: [userId], references: [id])
  userId      BigInt
  @@index([userId])
}

model Event {
  id          BigInt @id @default(autoincrement())
  title       String
  description String
  location    String
  image       String?
  scheduledAt DateTime
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  deletedAt   DateTime?
  
  category   EventCategory @relation(fields: [categoryId], references: [id])
  categoryId BigInt

  user       User @relation(fields: [userId], references: [id])
  userId     BigInt
  
  participants Participant[]
  @@index([title, categoryId, location, scheduledAt])
}

model EventCategory {
  id        BigInt @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime?
  events    Event[]
}

model Participant {
  id        BigInt @id @default(autoincrement())
  joinedAt  DateTime @default(now())
  canceledAt DateTime?
  
  event     Event @relation(fields: [eventId], references: [id])
  eventId   BigInt
  user      User @relation(fields: [userId], references: [id])
  userId    BigInt
  @@index([userId])
}

model UserBlacklist {
  id        BigInt @id @default(autoincrement())
  reason    String
  bannedAt  DateTime @default(now())
  unBannedAt DateTime?
  
  user      User @relation(fields: [userId], references: [id])
  userId    BigInt @unique
  @@index([userId])
}